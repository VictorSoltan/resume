[{"/home/holden/Documents/frontend/resume/src/index.js":"1","/home/holden/Documents/frontend/resume/src/App.js":"2","/home/holden/Documents/frontend/resume/src/reportWebVitals.js":"3","/home/holden/Documents/frontend/resume/src/components/Avatar.js":"4","/home/holden/Documents/frontend/resume/src/components/Bio.js":"5"},{"size":500,"mtime":1614024615244,"results":"6","hashOfConfig":"7"},{"size":2831,"mtime":1614277122898,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1614024615244,"results":"9","hashOfConfig":"7"},{"size":4731,"mtime":1614271608412,"results":"10","hashOfConfig":"7"},{"size":6532,"mtime":1614273893589,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ed81as",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/holden/Documents/frontend/resume/src/index.js",[],"/home/holden/Documents/frontend/resume/src/App.js",[],"/home/holden/Documents/frontend/resume/src/reportWebVitals.js",[],"/home/holden/Documents/frontend/resume/src/components/Avatar.js",["24","25","26","27"],"import React, { useState } from 'react';\nimport Option from 'react-select';\nimport './avatar.css';\nimport userpic from './../static/userpic.png'\nimport skillDev from './../static/skill-development.png'\nimport language from './../static/language.png'\nimport code from './../static/qr-code.png'\n\n\nfunction Avatar() {\n  \n  const mystyle = {\n    backgroundColor: \"DodgerBlue\",\n    padding: \"5px\",\n  };\n  const options = [\n    { value: '0', label: <img src={skillDev} style={mystyle} width=\"20px\"/>},\n    { value: '1', label: <img src={language} style={mystyle} width=\"20px\"/>},\n  ]\n  let [imgValue, setImgValue] = useState(0)\n  const MyComponent = () => (\n    <Option \n      defaultValue={options[0]}\n      options={options}\n      onChange={handleInputChange}\n      isSearchable\n      className=\"img-options\"\n    />\n  )\n  const handleInputChange = (inputValue) => {\n    setImgValue(imgValue = inputValue.value)\n  }\n  const loadFile = (e) => {\n    let image = document.querySelector('.avatar');\n    image.src = URL.createObjectURL(e.target.files[0])\n  };\n  const loadQrCode = (e) => {\n    let image = document.querySelector('.code').children[0];\n    image.src = URL.createObjectURL(e.target.files[0])\n  };\n  const addElem = (e) => {\n    let value = e.target.nextElementSibling.value\n    console.log(e.target.nextElementSibling.value)\n    let container = document.createElement(\"div\");\n    let cont = document.createElement(\"div\");\n    let pBar = document.createElement(\"div\");\n    let img = document.createElement(\"img\");\n    let node = document.createElement(\"input\");\n    let ProcNode = document.createElement(\"input\");\n    let liElem = document.createElement(\"li\");\n    node.classList.add('input')\n    if (Number(value) === 0){\n      node.classList.add('header-input')\n      cont.classList.add('icon-column')\n      if (Number(imgValue) === 0){\n        img.src = skillDev\n      }else{\n        img.src = language\n      }\n      cont.appendChild(img)\n      container.appendChild(cont)\n      container.appendChild(node)\n      container.classList.add('header-container')\n      document.querySelector('.skills').appendChild(container)   \n    }else if(Number(value) === 1){\n      node.classList.add('column-input')\n      container.appendChild(node)\n      document.querySelector('.skills').appendChild(node)\n    }else if(Number(value) === 2){\n      cont.classList.add('pBar-border')\n      pBar.classList.add('pBar-progress')\n      container.classList.add('progress-bar')\n      node.classList.add('progress-input')\n      ProcNode.classList.add('procents')\n      ProcNode.placeholder = \"Проценты столбца(от 1 до 100)\"; \n      ProcNode.type = \"number\";\n      ProcNode.onchange = function (e) {\n        e.target.previousSibling.children[0].style = \"width: \"  + e.target.value + \"%\"  \n     };\n      cont.appendChild(pBar)\n      container.appendChild(node)\n      container.appendChild(cont)\n      container.appendChild(ProcNode)\n      document.querySelector('.skills').appendChild(container)\n    }else{\n      container.appendChild(node)\n      node.classList.add('marker-input')\n      liElem.classList.add('marker')\n      liElem.appendChild(container)\n      document.querySelector('.skills').appendChild(liElem)\n    }\n  };\n  const removeElem = (e) => {\n    console.log(e.target)\n    let skills = document.querySelector('.skills')\n    if (skills.children.length > 0){\n      skills.removeChild(skills.lastElementChild)\n    }  \n  };\n  return (\n    <div className=\"header\">\n      <div className=\"ava-img\">\n        <img className=\"avatar\" src={userpic}/>\t\n        <input className=\"browse-img\" type=\"file\"  accept=\"image/*\" name=\"image\" id=\"file\"  onChange={loadFile}></input>\n        <input className=\"input-name input\"></input>\n        <input className=\"input-profession input\"></input>\n      </div>\n      <div className=\"add-buttons\">\n        <div className=\"add-element\">\n          <button onClick={addElem}>Добавить элемент</button>\n          <select>\n            <option value=\"0\">Иконка+оглавление</option>\n            <option value=\"1\">Оглавление столбца</option>\n            <option value=\"2\">Аттрибут с полосой</option>\n            <option value=\"3\">Ма́ркер списка</option>\n          </select>\n          <MyComponent/>\n        </div>\n        <button className=\"removeElem\" onClick={removeElem}>Удалить последний элемент</button>\n      </div>\n      <div className=\"skills\">\n      </div>\n      <div className=\"code\">\n        <img src={code} />\n        <input className=\"browse-img\" type=\"file\"  accept=\"image/*\" name=\"image\" id=\"file\" onChange={loadQrCode}></input>\n      </div>      \n    </div>\n  );\n}\n\nexport default Avatar;\n","/home/holden/Documents/frontend/resume/src/components/Bio.js",["28","29","30","31","32","33","34","35","36"],"import React, { useState } from 'react';\nimport Option from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt, faPhoneAlt, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\nimport './bio.css';\nimport QualityExpert from './../static/Quality_Expert.png'\n\nimport resume from './../static/resume.png'\nimport experience from './../static/experience.png'\nimport mortarboard from './../static/mortarboard.png'\nimport onlineCourse from './../static/online-course.png'\nimport button from './../static/button.png'\nimport briefing from './../static/briefing.png'\n\n\nfunction Bio() {\n  const mystyle = {\n    backgroundColor: \"DodgerBlue\",\n    padding: \"5px\",\n    width: '20px'\n  };\n  const options = [\n    { value: '0', label: <img src={resume} style={mystyle}/>},\n    { value: '1', label: <img src={experience} style={mystyle}/>},\n    { value: '2', label: <img src={mortarboard} style={mystyle}/>},\n    { value: '3', label: <img src={onlineCourse} style={mystyle}/>},\n    { value: '4', label: <img src={button} style={mystyle}/>},\n    { value: '5', label: <img src={briefing} style={mystyle}/>}\n  ]\n  let [imgValue, setImgValue] = useState(0)\n\n  const MyComponent = () => (\n    <Option \n      defaultValue={options[0]}\n      width=\"30px\"\n      options={options}\n      onChange={handleInputChange}\n      isSearchable\n      className=\"img-options\"\n    />\n  )\n  const handleInputChange = (inputValue) => {\n    setImgValue(imgValue = inputValue.value)\n  }\n\n  const addElem = (e) => {\n    let value = e.target.nextElementSibling.value\n    console.log(e.target.nextElementSibling.value)\n    let container = document.createElement(\"div\");\n    let cont = document.createElement(\"div\");\n    let img = document.createElement(\"img\");\n    let node = document.createElement(\"input\");\n    let area = document.createElement(\"textarea\")\n    let liElem = document.createElement(\"li\");\n    node.classList.add('input')\n    if (Number(value) === 0){\n      node.classList.add('bio-header-input')\n      cont.classList.add('icon-column')\n      if (Number(imgValue) === 0){\n        img.src = resume\n      }else if(Number(imgValue) === 1){\n        img.src = experience\n      }else if(Number(imgValue) === 2){\n        img.src = mortarboard\n      }else if(Number(imgValue) === 3){\n        img.src = onlineCourse\n      }else if(Number(imgValue) === 4){\n        img.src = button\n      }else{\n        img.src = briefing\n      }\n      cont.appendChild(img)\n      container.appendChild(cont)\n      container.appendChild(node)\n      container.classList.add('bio-header-container')\n      document.querySelector('.biography').appendChild(container)   \n    }else if(Number(value) === 1){\n      container.appendChild(area)\n      area.classList.add('marker-input')\n      liElem.classList.add('bio-marker')\n      liElem.appendChild(container)\n      document.querySelector('.biography').appendChild(liElem)\n    }else{\n      container.appendChild(area)\n      area.classList.add('bio-marker-area')\n      liElem.classList.add('bio-area-marker')\n      liElem.appendChild(container)\n      document.querySelector('.biography').appendChild(liElem)\n    }\n  };\n  const removeElem = (e) => {\n    console.log(e.target)\n    let biography = document.querySelector('.biography')\n    if (biography.children.length > 0){\n      biography.removeChild(biography.lastElementChild)\n    }  \n  };\n  const strongElem = () => {\n    let strong = document.createElement(\"strong\");\n    let span = document.createElement(\"span\");\n    let span1 = document.createElement(\"span\");\n    let textSpan = document.querySelectorAll('span')\n    let rt = window.getSelection()\n    if(rt != null && rt.anchorNode != null){\n      let beforeSelect = rt.anchorNode.data.substr(0, rt.focusOffset) \n      let selectedText = rt.anchorNode.data.substr(rt.focusOffset, (rt.anchorOffset - rt.focusOffset)) \n      let afterSelect = rt.anchorNode.data.substr(rt.anchorOffset, rt.anchorNode.length) \n      alert(beforeSelect)\n      alert(selectedText)\n      alert(afterSelect)\n      let text = rt.anchorNode.data;\n      let selectedParent = rt.anchorNode.parentNode;\n      span.innerHTML = beforeSelect\n      strong.innerHTML = selectedText\n      span1.innerHTML = afterSelect\n      selectedParent.innerHTML = ''\n      selectedParent.appendChild(span)\n      selectedParent.appendChild(strong)\n      selectedParent.appendChild(span1)\n      // selectedParent.removeChild(rt.anchorNode.parentNode)\n    }\n  }  \n  return (\n    <div className=\"bio\">\n      <div className=\"contacts\">\n        <div className=\"contact-info\">\n          <div className=\"info\">\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\n            <div>\n              <span>Adress</span>\n              <input className=\"input\"></input>\n            </div>\n          </div>\n          <div className=\"info\">\n            <FontAwesomeIcon icon={faPhoneAlt} />\n            <div>\n              <span>Phone</span>\n              <input className=\"input\"></input>\n            </div>            \n          </div>\n          <div className=\"info\">\n            <FontAwesomeIcon icon={faEnvelope} />\n            <div>\n              <span>E-Mail</span>\n              <input className=\"input\"></input>\n            </div>            \n          </div>\n          <div className=\"info\">\n            <FontAwesomeIcon icon={faLinkedinIn} />\n            <div>\n              <span>Linkedin</span>\n              <input className=\"input\"></input>\n            </div>            \n          </div>                              \n        </div>\n        <div className=\"logo\">\n          <img src={QualityExpert}/>\n          <h2>quality-expert.com</h2>\n        </div>          \n      </div>\n      <div className=\"add-buttons\">\n        <div className=\"add-element bio-element\">\n          <button onClick={addElem}>Добавить элемент</button>\n          <select>\n              <option value=\"0\">Иконка+оглавление</option>\n              <option value=\"1\">Оглавление столбца</option>\n              <option value=\"2\">Ма́ркер списка</option>\n            </select>\n            <MyComponent/>            \n            <button onClick={removeElem}>Удалить последний элемент</button>\n        </div>\n        <button className=\"removeElem\" onClick={strongElem}>Обозначить выделенное</button>\n      </div>\n      <div className=\"biography\">\n      </div>\n    </div>\n  );\n}\n\nexport default Bio;\n",{"ruleId":"37","severity":1,"message":"38","line":17,"column":26,"nodeType":"39","endLine":17,"endColumn":76},{"ruleId":"37","severity":1,"message":"38","line":18,"column":26,"nodeType":"39","endLine":18,"endColumn":76},{"ruleId":"37","severity":1,"message":"38","line":103,"column":9,"nodeType":"39","endLine":103,"endColumn":48},{"ruleId":"37","severity":1,"message":"38","line":124,"column":9,"nodeType":"39","endLine":124,"endColumn":27},{"ruleId":"37","severity":1,"message":"38","line":24,"column":26,"nodeType":"39","endLine":24,"endColumn":61},{"ruleId":"37","severity":1,"message":"38","line":25,"column":26,"nodeType":"39","endLine":25,"endColumn":65},{"ruleId":"37","severity":1,"message":"38","line":26,"column":26,"nodeType":"39","endLine":26,"endColumn":66},{"ruleId":"37","severity":1,"message":"38","line":27,"column":26,"nodeType":"39","endLine":27,"endColumn":67},{"ruleId":"37","severity":1,"message":"38","line":28,"column":26,"nodeType":"39","endLine":28,"endColumn":61},{"ruleId":"37","severity":1,"message":"38","line":29,"column":26,"nodeType":"39","endLine":29,"endColumn":63},{"ruleId":"40","severity":1,"message":"41","line":103,"column":9,"nodeType":"42","messageId":"43","endLine":103,"endColumn":17},{"ruleId":"40","severity":1,"message":"44","line":112,"column":11,"nodeType":"42","messageId":"43","endLine":112,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":158,"column":11,"nodeType":"39","endLine":158,"endColumn":37},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'textSpan' is assigned a value but never used.","Identifier","unusedVar","'text' is assigned a value but never used."]