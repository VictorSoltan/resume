{"ast":null,"code":"var _jsxFileName = \"/home/holden/Documents/frontend/resume/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Avatar from './components/Avatar';\nimport Bio from './components/Bio';\nimport { jsPDF } from \"jspdf\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport ReactPDF, { Document, Page, View, Image, StyleSheet } from '@react-pdf/renderer';\nimport domtoimage from 'dom-to-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const img = 'https://avatars.githubusercontent.com/u/1733236?s=400&v=4';\n\n  const Save = () => {\n    let area = document.querySelectorAll('textarea');\n\n    for (let x = 0; x < area.length; x++) {\n      let textSpan = document.createElement(\"div\");\n      textSpan.classList.add('contint');\n      textSpan.contentEditable = \"true\";\n      textSpan.innerHTML = area[x].value;\n      textSpan.style.width = area[x].offsetWidth + 'px';\n      textSpan.style.height = area[x].offsetHeight + 'px';\n      area[x].parentNode.appendChild(textSpan);\n      area[x].parentNode.removeChild(area[x]);\n    }\n  };\n\n  const Editing = () => {\n    let textSpan = document.querySelectorAll('.contint');\n\n    for (let x = 0; x < textSpan.length; x++) {\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = textSpan[x].innerHTML;\n      textArea.style.width = textSpan[x].offsetWidth + 'px';\n      textArea.style.height = textSpan[x].offsetHeight + 'px';\n      textSpan[x].parentNode.appendChild(textArea);\n      textSpan[x].parentNode.removeChild(textSpan[x]);\n    }\n\n    document.querySelector('.browseImg').style = 'display: block;';\n    let inputList = document.querySelectorAll('.input');\n\n    for (let x = 0; x < inputList.length; x++) {\n      inputList[x].style = 'border-bottom: 1px solid #11adb5;';\n    }\n\n    let procents = document.querySelectorAll('.procents');\n\n    for (let x = 0; x < procents.length; x++) {\n      procents[x].style = 'display: block;';\n    }\n\n    const buttons = document.querySelectorAll('.add-buttons');\n\n    for (let x = 0; x < buttons.length; x++) {\n      buttons[x].style = 'display: block;';\n    }\n\n    document.querySelector('.browse-img').style = 'visibility: visible;';\n  };\n\n  const styles = StyleSheet.create({\n    page: {\n      flexDirection: 'row'\n    },\n    image: {\n      width: '60%',\n      padding: 10,\n      backgroundColor: 'grey'\n    },\n    textWrapper: {\n      width: '40%',\n      height: '100%',\n      backgroundColor: '#f0f0f0',\n      paddingHorizontal: 50,\n      paddingVertical: 30\n    },\n    text: {\n      fontFamily: 'Oswald',\n      color: '#212121'\n    }\n  });\n\n  const MyDocument = () => {\n    return /*#__PURE__*/_jsxDEV(Document, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        style: styles.page,\n        size: [1500, 600],\n        page: true,\n        children: /*#__PURE__*/_jsxDEV(View, {\n          style: styles.image,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this);\n  };\n\n  const printDocument = () => {// document.body.scrollTop = 0;\n    // document.documentElement.scrollTop = 0;\n    // document.querySelector('.browseImg').style = 'display: none;'\n    // let inputList = document.querySelectorAll('.input')\n    // for (let x = 0; x < inputList.length; x++){\n    //   inputList[x].style = 'border-bottom: none;'\n    // }\n    // let procents = document.querySelectorAll('.procents')\n    // for (let x = 0; x < procents.length; x++){\n    //   procents[x].style = 'display: none;'\n    // }    \n    // const buttons = document.querySelectorAll('.add-buttons')\n    // for (let x = 0; x < buttons.length; x++){\n    //   buttons[x].style = 'display: none;'\n    // }        \n    // document.querySelector('.browse-img').style = 'visibility: hidden;'\n    // const input = document.querySelector('.App');\n    // const scale = 3\n    // const style = {\n    //   transform: 'scale('+scale+')',\n    //   transformOrigin: 'top left',\n    //   width: input.offsetWidth + \"px\",\n    //   height: input.offsetHeight + \"px\"\n    // }\n    // const param = {\n    //   height: input.offsetHeight * scale,\n    //   width: input.offsetWidth * scale,\n    //   quality: 1,\n    //   style\n    // }\n    // domtoimage.toPng(input, param)\n    //   .then(function (imgData) {\n    //     const doc = (\n    //       <Document>\n    //         <Page size={[input.offsetWidth, input.offsetHeight]} page>\n    //           <View>\n    //             <Image src={imgData} />\n    //           </View>\n    //         </Page>\n    //       </Document>\n    //     )   \n    //     var link = document.createElement('a');\n    //     link.download = 'my-image-name.pdf';\n    //     link.href = doc;\n    //     link.click();\n    // let ImWidth = input.offsetWidth;\n    // let ImHeight = input.offsetHeight;\n    // let width = input.scrollWidth;\n    // let height = input.scrollHeight;           \n    // let millimeters = {};\n    // millimeters.Width = Math.floor(width / 4.3);\n    // millimeters.Height = Math.floor(height / 4.3);\n    // console.log(ImWidth + '...' + millimeters.Width)\n    // console.log(ImHeight + '...' + millimeters.Height)\n    // const pdf = new jsPDF(\"landscape\");\n    // console.log(input)\n    // console.log(width + '..' + height)\n    // pdf.internal.scaleFactor = 30;\n    // pdf.addImage(imgData, 'PNG', 0, 0, millimeters.Width, millimeters.Height);\n    // pdf.save(\"download.pdf\");\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"redactor-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n        document: /*#__PURE__*/_jsxDEV(MyDocument, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this),\n        fileName: \"movielist.pdf\",\n        children: ({\n          blob,\n          url,\n          loading,\n          error\n        }) => loading ? \"Loading document...\" : \"Download Pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        onClick: printDocument,\n        children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B \\u0432 PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        onClick: Save,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        onClick: Editing,\n        children: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/holden/Documents/frontend/resume/src/App.js"],"names":["React","Avatar","Bio","jsPDF","PDFDownloadLink","ReactPDF","Document","Page","View","Image","StyleSheet","domtoimage","App","img","Save","area","document","querySelectorAll","x","length","textSpan","createElement","classList","add","contentEditable","innerHTML","value","style","width","offsetWidth","height","offsetHeight","parentNode","appendChild","removeChild","Editing","textArea","querySelector","inputList","procents","buttons","styles","create","page","flexDirection","image","padding","backgroundColor","textWrapper","paddingHorizontal","paddingVertical","text","fontFamily","color","MyDocument","printDocument","blob","url","loading","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Avatar from './components/Avatar'\nimport Bio from './components/Bio'\nimport { jsPDF } from \"jspdf\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport ReactPDF, { Document, Page, View, Image, StyleSheet, } from '@react-pdf/renderer';\nimport domtoimage from 'dom-to-image';\n\nfunction App() {\n  const img = 'https://avatars.githubusercontent.com/u/1733236?s=400&v=4'\n\n  const Save = () => {\n    let area = document.querySelectorAll('textarea')\n    for(let x=0; x<area.length; x++){\n      let textSpan = document.createElement(\"div\");\n      textSpan.classList.add('contint')\n      textSpan.contentEditable = \"true\"; \n      textSpan.innerHTML = area[x].value\n      textSpan.style.width = area[x].offsetWidth + 'px'\n      textSpan.style.height = area[x].offsetHeight + 'px'\n      area[x].parentNode.appendChild(textSpan)\n      area[x].parentNode.removeChild(area[x])\n    } \n  }\n  const Editing = () => {\n    let textSpan = document.querySelectorAll('.contint')\n    for(let x=0; x<textSpan.length; x++){\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = textSpan[x].innerHTML\n      textArea.style.width = textSpan[x].offsetWidth + 'px'\n      textArea.style.height = textSpan[x].offsetHeight + 'px'\n      textSpan[x].parentNode.appendChild(textArea)\n      textSpan[x].parentNode.removeChild(textSpan[x])\n    } \n    document.querySelector('.browseImg').style = 'display: block;'\n    let inputList = document.querySelectorAll('.input')\n    for (let x = 0; x < inputList.length; x++){\n      inputList[x].style = 'border-bottom: 1px solid #11adb5;'\n    }\n    let procents = document.querySelectorAll('.procents')\n    for (let x = 0; x < procents.length; x++){\n      procents[x].style = 'display: block;'\n    }    \n    const buttons = document.querySelectorAll('.add-buttons')\n    for (let x = 0; x < buttons.length; x++){\n      buttons[x].style = 'display: block;'\n    }        \n    document.querySelector('.browse-img').style = 'visibility: visible;'\n  }\n\n  const styles = StyleSheet.create({\n    page: {\n      flexDirection: 'row',\n    },\n    image: {\n      width: '60%',\n      padding: 10,\n      backgroundColor: 'grey',\n    },\n    textWrapper: {\n      width: '40%',\n      height: '100%',\n      backgroundColor: '#f0f0f0',\n      paddingHorizontal: 50,\n      paddingVertical: 30,\n    },\n    text: {\n      fontFamily: 'Oswald',\n      color: '#212121',\n    },\n  });\n\n  const MyDocument = () => {\n    return (\n    <Document>\n    <Page style={styles.page} size={[1500, 600]} page>\n      <View style={styles.image}>\n        <Image src={img} />\n      </View>\n    </Page>\n  </Document>\n    )\n  };\n  const printDocument = () => {\n    // document.body.scrollTop = 0;\n    // document.documentElement.scrollTop = 0;\n\n    // document.querySelector('.browseImg').style = 'display: none;'\n    // let inputList = document.querySelectorAll('.input')\n    // for (let x = 0; x < inputList.length; x++){\n    //   inputList[x].style = 'border-bottom: none;'\n    // }\n    // let procents = document.querySelectorAll('.procents')\n    // for (let x = 0; x < procents.length; x++){\n    //   procents[x].style = 'display: none;'\n    // }    \n    // const buttons = document.querySelectorAll('.add-buttons')\n    // for (let x = 0; x < buttons.length; x++){\n    //   buttons[x].style = 'display: none;'\n    // }        \n    // document.querySelector('.browse-img').style = 'visibility: hidden;'\n\n    // const input = document.querySelector('.App');\n    // const scale = 3\n    \n    // const style = {\n    //   transform: 'scale('+scale+')',\n    //   transformOrigin: 'top left',\n    //   width: input.offsetWidth + \"px\",\n    //   height: input.offsetHeight + \"px\"\n    // }\n  \n    // const param = {\n    //   height: input.offsetHeight * scale,\n    //   width: input.offsetWidth * scale,\n    //   quality: 1,\n    //   style\n    // }\n\n    // domtoimage.toPng(input, param)\n    //   .then(function (imgData) {\n    //     const doc = (\n    //       <Document>\n    //         <Page size={[input.offsetWidth, input.offsetHeight]} page>\n    //           <View>\n    //             <Image src={imgData} />\n    //           </View>\n    //         </Page>\n    //       </Document>\n    //     )   \n    //     var link = document.createElement('a');\n    //     link.download = 'my-image-name.pdf';\n    //     link.href = doc;\n    //     link.click();\n          // let ImWidth = input.offsetWidth;\n          // let ImHeight = input.offsetHeight;\n          // let width = input.scrollWidth;\n          // let height = input.scrollHeight;           \n          // let millimeters = {};\n          // millimeters.Width = Math.floor(width / 4.3);\n          // millimeters.Height = Math.floor(height / 4.3);\n          // console.log(ImWidth + '...' + millimeters.Width)\n          // console.log(ImHeight + '...' + millimeters.Height)\n          // const pdf = new jsPDF(\"landscape\");\n          // console.log(input)\n\n          // console.log(width + '..' + height)\n          // pdf.internal.scaleFactor = 30;\n          // pdf.addImage(imgData, 'PNG', 0, 0, millimeters.Width, millimeters.Height);\n          // pdf.save(\"download.pdf\");\n    // });\n  }\n  return (\n    <div>\n      <div className=\"App\">\n        <Avatar />\n        <Bio /> \n      </div>\n      <div className=\"redactor-buttons\">\n      <PDFDownloadLink\n          document={<MyDocument />}\n          fileName=\"movielist.pdf\"\n        >\n          {({ blob, url, loading, error }) =>\n            loading ? \"Loading document...\" : \"Download Pdf\"\n          }\n        </PDFDownloadLink>\n        <button className=\"save-button\" onClick={printDocument}>Экспортировать файл в PDF</button>\n        <button className=\"save-button\" onClick={Save}>Сохранить изменения</button>\n        <button className=\"save-button\" onClick={Editing}>Продолжить редактирование</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}