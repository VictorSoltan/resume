{"ast":null,"code":"var _jsxFileName = \"/home/holden/Documents/frontend/resume/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Avatar from './components/Avatar';\nimport Bio from './components/Bio';\nimport { jsPDF } from \"jspdf\";\nimport domtoimage from 'dom-to-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const Save = () => {\n    let textSpan = document.createElement(\"div\");\n    let area = document.querySelectorAll('textarea');\n\n    for (let x = 0; x < area.length; x++) {\n      textSpan.innerHTML = area[x].value;\n      textSpan.style.width = area[x].offsetWidth + 'px';\n      textSpan.style.height = area[x].offsetHeight + 'px';\n      area[x].parentNode.appendChild(textSpan);\n      area[x].parentNode.removeChild(area[x]);\n    }\n  };\n\n  const printDocument = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0; // document.querySelector('.save-button').style = 'display: none;'\n\n    let inputList = document.querySelectorAll('.input');\n\n    for (let x = 0; x < inputList.length; x++) {\n      inputList[x].style = 'border-bottom: none;';\n    }\n\n    let procents = document.querySelectorAll('.procents');\n\n    for (let x = 0; x < procents.length; x++) {\n      procents[x].style = 'display: none;';\n    }\n\n    const buttons = document.querySelectorAll('.add-buttons');\n\n    for (let x = 0; x < buttons.length; x++) {\n      buttons[x].style = 'display: none;';\n    }\n\n    document.querySelector('.browse-img').style = 'visibility: hidden;';\n    const input = document.querySelector('.App');\n    const scale = 3;\n    console.log(input);\n    const style = {\n      transform: 'scale(' + scale + ')',\n      transformOrigin: 'top left',\n      width: input.offsetWidth + \"px\",\n      height: input.offsetHeight + \"px\"\n    };\n    const param = {\n      height: input.offsetHeight * scale,\n      width: input.offsetWidth * scale,\n      quality: 1,\n      style\n    };\n    domtoimage.toPng(input, param).then(function (imgData) {\n      let ImWidth = input.offsetWidth;\n      let ImHeight = input.offsetHeight;\n      let millimeters = {};\n      millimeters.Width = Math.floor(ImWidth / 5.90476190476);\n      millimeters.Height = Math.floor(ImHeight / 5.90476190476);\n      console.log(ImWidth + '...' + millimeters.Width);\n      console.log(ImHeight + '...' + millimeters.Height);\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\", millimeters.Width, millimeters.Height);\n      pdf.internal.scaleFactor = 30;\n      pdf.addImage(imgData, 'PNG', 0, 0, millimeters.Width, millimeters.Height);\n      pdf.save(\"download.pdf\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: printDocument,\n      children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B \\u0432 PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: Save,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/holden/Documents/frontend/resume/src/App.js"],"names":["React","Avatar","Bio","jsPDF","domtoimage","App","Save","textSpan","document","createElement","area","querySelectorAll","x","length","innerHTML","value","style","width","offsetWidth","height","offsetHeight","parentNode","appendChild","removeChild","printDocument","body","scrollTop","documentElement","inputList","procents","buttons","querySelector","input","scale","console","log","transform","transformOrigin","param","quality","toPng","then","imgData","ImWidth","ImHeight","millimeters","Width","Math","floor","Height","pdf","internal","scaleFactor","addImage","save"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Avatar from './components/Avatar'\nimport Bio from './components/Bio'\nimport { jsPDF } from \"jspdf\";\nimport domtoimage from 'dom-to-image';\n\nfunction App() {\n  const Save = () => {\n    let textSpan = document.createElement(\"div\");\n    let area = document.querySelectorAll('textarea')\n    for(let x=0; x<area.length; x++){\n      textSpan.innerHTML = area[x].value\n      textSpan.style.width = area[x].offsetWidth + 'px'\n      textSpan.style.height = area[x].offsetHeight + 'px'\n      area[x].parentNode.appendChild(textSpan)\n      area[x].parentNode.removeChild(area[x])\n    } \n  }\n\n  const printDocument = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n    // document.querySelector('.save-button').style = 'display: none;'\n    let inputList = document.querySelectorAll('.input')\n    for (let x = 0; x < inputList.length; x++){\n      inputList[x].style = 'border-bottom: none;'\n    }\n    let procents = document.querySelectorAll('.procents')\n    for (let x = 0; x < procents.length; x++){\n      procents[x].style = 'display: none;'\n    }    \n    const buttons = document.querySelectorAll('.add-buttons')\n    for (let x = 0; x < buttons.length; x++){\n      buttons[x].style = 'display: none;'\n    }        \n    document.querySelector('.browse-img').style = 'visibility: hidden;'\n    const input = document.querySelector('.App');\n    const scale = 3\n    console.log(input)\n    \n    const style = {\n      transform: 'scale('+scale+')',\n      transformOrigin: 'top left',\n      width: input.offsetWidth + \"px\",\n      height: input.offsetHeight + \"px\"\n    }\n  \n    const param = {\n      height: input.offsetHeight * scale,\n      width: input.offsetWidth * scale,\n      quality: 1,\n      style\n    }\n\n    domtoimage.toPng(input, param)\n      .then(function (imgData) {\n \n          let ImWidth = input.offsetWidth;\n          let ImHeight = input.offsetHeight;\n          let millimeters = {};\n          millimeters.Width = Math.floor(ImWidth / 5.90476190476);\n          millimeters.Height = Math.floor(ImHeight / 5.90476190476);\n          console.log(ImWidth + '...' + millimeters.Width)\n          console.log(ImHeight + '...' + millimeters.Height)\n          const pdf = new jsPDF(\"p\", \"mm\", \"a4\", millimeters.Width, millimeters.Height);\n          pdf.internal.scaleFactor = 30;\n          pdf.addImage(imgData, 'PNG', 0, 0, millimeters.Width, millimeters.Height);\n          pdf.save(\"download.pdf\");\n      });\n  }\n  return (\n    <div>\n      <div className=\"App\">\n        <Avatar />\n        <Bio />\n      </div>\n      <button className=\"save-button\" onClick={printDocument}>Экспортировать файл в PDF</button>\n      <button className=\"save-button\" onClick={Save}>Сохранить</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}